image: docker:latest

services:
  - postgres:13-alpine
  - docker:dind

variables:
  DOCKER_DRIVER: overlay

stages:
  - build
  - package
  - deploy


build-artifact:
  image: maven:3-jdk-8
  stage: build
  script:
    - mvn install
  services:
    - name: postgres:13-alpine
      alias: postgres-db
  variables:
    POSTGRES_DB: "facturero"
    POSTGRES_USER: "postgres"
    POSTGRES_PASS: "postgres"
    POSTGRES_HOST_AUTH_METHOD: trust
    MAIN_DATASOURCE_USERNAME: "postgres"
    MAIN_DATASOURCE_PASSWORD: "postgres"
    MAIN_DATASOURCE_URL: "jdbc:postgresql://postgres-db/calculadora_db"
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: push
    paths:
      - target/
  artifacts:
    paths:
      - target/

build-docker-image-pro:
  stage: package
  image: docker:dind
  variables:
    DOCKER_DRIVER: overlay2
    ROLLOUT_RESOURCE_TYPE: deployment
    DOCKER_TLS_CERTDIR: ""
    DOCKER_HOST: tcp://docker:2375
  script:
    - docker build  --build-arg version=$CI_COMMIT_TAG -t "$CI_REGISTRY_IMAGE":$CI_COMMIT_TAG .
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com
    - docker push "$CI_REGISTRY_IMAGE":"$CI_COMMIT_TAG"
  services:
    - docker:dind
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: push
    paths:
      - build
      - .gradle
  only:
    - tags

deploy-pro:
  stage: deploy
  image: cclozano/ansible:1.2
  environment:
    name: facturero
    url: https://www.fidemvirtual.com
  variables:
    DOCKER_IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
    HOST: www.fidemvirtual.com
  script:
    - cat ansible/inventory | envsubst >> inventory
    - cat ansible/setup.yml | envsubst >> playbook.yml
    - ansible-playbook playbook.yml -i inventory
  only:
    - tags


